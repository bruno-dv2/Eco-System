generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id         Int        @id @default(autoincrement())
  email      String     @unique
  senha      String
  nome       String
  dataCriacao DateTime  @default(now())
  dataAtualizacao DateTime @default(now())

  materiais  Material[]
  entradas   Entrada[]
  saidas     Saida[]
  estoques   Estoque[]
}

model Material {
  id         Int        @id @default(autoincrement())
  nome       String
  descricao  String?
  unidade    String
  dataCriacao DateTime  @default(now())
  dataAtualizacao DateTime @default(now())
  usuarioId  Int
  usuario    Usuario    @relation(fields: [usuarioId], references: [id])

  entradas   Entrada[]
  saidas     Saida[]
  estoque    Estoque?
  
  @@unique([nome, usuarioId])
}

model Entrada {
  id         Int        @id @default(autoincrement())
  materialId Int
  material   Material   @relation(fields: [materialId], references: [id])
  quantidade Float
  preco      Float
  data       DateTime   @default(now())
  usuarioId  Int
  usuario    Usuario    @relation(fields: [usuarioId], references: [id])
}

model Saida {
  id         Int        @id @default(autoincrement())
  materialId Int
  material   Material   @relation(fields: [materialId], references: [id])
  quantidade Float
  data       DateTime   @default(now())
  usuarioId  Int
  usuario    Usuario    @relation(fields: [usuarioId], references: [id])
}

model Estoque {
  id         Int        @id @default(autoincrement())
  materialId Int        @unique
  material   Material   @relation(fields: [materialId], references: [id])
  quantidade Float
  precoMedio Float
  valorTotal Float
  usuarioId  Int
  usuario    Usuario    @relation(fields: [usuarioId], references: [id])
}

model TokenRevogado {
  id            Int      @id @default(autoincrement())
  token         String   @unique @db.VarChar(500)
  dataRevogacao DateTime @default(now())
  expiraEm      DateTime
}